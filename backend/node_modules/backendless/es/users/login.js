'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.login = login;

var _utils = require('../utils');

var _utils2 = _interopRequireDefault(_utils);

var _utils3 = require('./utils');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function login(login, password, stayLoggedIn) /** async */{
  if (!login) {
    throw new Error('Login can not be empty');
  }

  if (!password) {
    throw new Error('Password can not be empty');
  }

  stayLoggedIn = stayLoggedIn === true;

  this.app.LocalCache.remove('user-token');
  this.app.LocalCache.remove('current-user-id');
  this.app.LocalCache.set('stayLoggedIn', false);

  var responder = _utils2.default.extractResponder(arguments);
  var isAsync = !!responder;

  if (responder) {
    responder = _utils3.wrapAsync.call(this, responder, stayLoggedIn);
  }

  var data = {
    login: login,
    password: password
  };

  var result = this.app.request.post({
    url: this.app.urls.userLogin(),
    isAsync: isAsync,
    asyncHandler: responder,
    data: data
  });

  if (!isAsync && result) {
    this.setLocalCurrentUser(_utils3.parseResponse.call(this, result, stayLoggedIn));

    result = _utils3.getUserFromResponse.call(this, this.getLocalCurrentUser());
  }

  return result;
}