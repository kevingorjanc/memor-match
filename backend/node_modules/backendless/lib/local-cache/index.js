'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = undefined;

var _utils = require('../utils');

var _utils2 = _interopRequireDefault(_utils);

var _cache = require('./cache');

var _cache2 = _interopRequireDefault(_cache);

var _localStorageCache = require('./local-storage-cache');

var _localStorageCache2 = _interopRequireDefault(_localStorageCache);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var LocalCache = function LocalCache() {
  _classCallCheck(this, LocalCache);

  for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
    args[_key] = arguments[_key];
  }

  var cache = _utils2.default.isLocalStorageSupported ? new (Function.prototype.bind.apply(_localStorageCache2.default, [null].concat(args)))() : new (Function.prototype.bind.apply(_cache2.default, [null].concat(args)))();

  cache.flushExpired();

  return cache;
};

exports.default = LocalCache;