'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.publish = publish;

var _utils = require('../../utils');

var _utils2 = _interopRequireDefault(_utils);

var _async = require('../../request/async');

var _async2 = _interopRequireDefault(_async);

var _deliveryOptions = require('../helpers/delivery-options');

var _deliveryOptions2 = _interopRequireDefault(_deliveryOptions);

var _publishOptions = require('../helpers/publish-options');

var _publishOptions2 = _interopRequireDefault(_publishOptions);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function publish(channelName, message, publishOptions, deliveryTarget, asyncHandler) {
  if (publishOptions instanceof _async2.default) {
    asyncHandler = publishOptions;
    publishOptions = undefined;
    deliveryTarget = undefined;
  }

  if (deliveryTarget instanceof _async2.default) {
    asyncHandler = deliveryTarget;
    deliveryTarget = undefined;
  }

  var data = {
    message: message
  };

  if (publishOptions) {
    if (!(publishOptions instanceof _publishOptions2.default)) {
      throw new Error('Use PublishOption as publishOptions argument');
    }

    _utils2.default.deepExtend(data, publishOptions);
  }

  if (deliveryTarget) {
    if (!(deliveryTarget instanceof _deliveryOptions2.default)) {
      throw new Error('Use DeliveryOptions as deliveryTarget argument');
    }

    _utils2.default.deepExtend(data, deliveryTarget);
  }

  return this.app.request.post({
    url: this.app.urls.messagingChannel(channelName),
    isAsync: !!asyncHandler,
    asyncHandler: asyncHandler,
    data: data
  });
}