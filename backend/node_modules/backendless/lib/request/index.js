'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = undefined;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _request = require('./request');

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var Methods = {
  GET: 'GET',
  POST: 'POST',
  PUT: 'PUT',
  DELETE: 'DELETE',
  PATCH: 'PATCH'
};

var Request = function () {
  function Request(app) {
    _classCallCheck(this, Request);

    this.app = app;

    this.Methods = Methods;
  }

  _createClass(Request, [{
    key: 'send',
    value: function send() {
      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      return _request.sendRequest.call.apply(_request.sendRequest, [this].concat(args));
    }
  }, {
    key: 'get',
    value: function get(config) {
      return this.send(_extends({}, config, { method: Methods.GET }));
    }
  }, {
    key: 'post',
    value: function post(config) {
      return this.send(_extends({}, config, { method: Methods.POST }));
    }
  }, {
    key: 'put',
    value: function put(config) {
      return this.send(_extends({}, config, { method: Methods.PUT }));
    }
  }, {
    key: 'delete',
    value: function _delete(config) {
      return this.send(_extends({}, config, { method: Methods.DELETE }));
    }
  }]);

  return Request;
}();

exports.default = Request;