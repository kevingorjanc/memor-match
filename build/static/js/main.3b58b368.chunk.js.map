{"version":3,"sources":["memory-match.svg","highscores-title.svg","game-tiles-component.js","game-won-component.js","timer-component.js","game-screen-component.js","high-scores-component.js","start-screen-component.js","index.js"],"names":["module","exports","GameTilesComponent","props","firstRow","secondRow","thirdRow","fourthRow","randomizeTiles","this","resetTiles","i","push","gameTiles","document","getElementsByClassName","length","className","turnOffReset","array","id","onClick","handleTileClick","indexToRemove","Math","floor","random","splice","Fragment","React","Component","GameWonComponent","submitScore","bind","value","scoreObject","attemptedMatches","tileClicks","name","time","displayTime","compositeScore","fetch","method","headers","body","JSON","stringify","then","res","json","viewHighScores","alert","src","memMatchLogo","alt","resetGame","TimerComponent","startTime","compareTime","fullDate","Date","getTime","secondFullDate","matches","GameScreenComponent","state","firstTileColor","secondTileColor","compareTileColors","e","target","tileColor","console","log","setState","setTimeout","HighScoresComponent","backendData","displayableScores","callBackend","sortData","catch","error","sortedData","sort","a","b","makeSortedDataDisplayable","displayableScoresArray","displayableScore","key","HighScoresTitle","closeHighScores","StartScreenComponent","startGame","viewScores","newScore","whichView","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.3b58b368.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/memory-match.034b4acc.svg\";","module.exports = __webpack_public_path__ + \"static/media/highscores-title.d40d221d.svg\";","import React from 'react'\nimport \"./game-screen-component\"\n\nexport default class GameTilesComponent extends React.Component {\n    constructor(props) {\n        super(props);\n        // this.state = {\n        //\n        // };\n        this.randomizeTiles();\n        // this.resetAllTiles = this.resetAllTiles.bind(this);\n    }\n\n    firstRow = [];\n    secondRow = [];\n    thirdRow = [];\n    fourthRow = [];\n\n    componentDidUpdate() {\n        if (this.props.resetTiles === true) {\n            let i;\n            let allTiles = [];\n            allTiles.push(this.firstRow, this.secondRow, this.thirdRow, this.fourthRow);\n            let gameTiles = document.getElementsByClassName(\"game-tiles\");\n            for (i = 0; i < gameTiles.length; i++) {\n                gameTiles[i].className = \"game-tiles\";\n            }\n\n            this.props.turnOffReset();\n        }\n    }\n\n\n    randomizeTiles() {\n        let array = [\n        <div id={\"red\"} className={\"game-tiles\"} onClick={this.props.handleTileClick}></div>,\n        <div id={\"red\"} className={\"game-tiles\"} onClick={this.props.handleTileClick}></div>,\n        <div id={\"yellow\"} className={\"game-tiles\"} onClick={this.props.handleTileClick}></div>,\n        <div id={\"yellow\"} className={\"game-tiles\"} onClick={this.props.handleTileClick}></div>,\n        <div id={\"grey\"} className={\"game-tiles\"} onClick={this.props.handleTileClick}></div>,\n        <div id={\"grey\"} className={\"game-tiles\"} onClick={this.props.handleTileClick}></div>,\n        <div id={\"green\"} className={\"game-tiles\"} onClick={this.props.handleTileClick}></div>,\n        <div id={\"green\"} className={\"game-tiles\"} onClick={this.props.handleTileClick}></div>,\n        <div id={\"blue\"} className={\"game-tiles\"} onClick={this.props.handleTileClick}></div>,\n        <div id={\"blue\"} className={\"game-tiles\"} onClick={this.props.handleTileClick}></div>,\n        <div id={\"purple\"} className={\"game-tiles\"} onClick={this.props.handleTileClick}></div>,\n        <div id={\"purple\"} className={\"game-tiles\"} onClick={this.props.handleTileClick}></div>,\n        <div id={\"orange\"} className={\"game-tiles\"} onClick={this.props.handleTileClick}></div>,\n        <div id={\"orange\"} className={\"game-tiles\"} onClick={this.props.handleTileClick}></div>,\n        <div id={\"pink\"} className={\"game-tiles\"} onClick={this.props.handleTileClick}></div>,\n        <div id={\"pink\"} className={\"game-tiles\"} onClick={this.props.handleTileClick}></div>,\n    ];\n        while (array.length > 0) {\n            let i = array.length;\n            let indexToRemove = Math.floor(Math.random() * i);\n            if (i >= 13 && i <= 16) {\n                this.firstRow.push(array.splice(indexToRemove, 1));\n            } else if (i >= 9 && i <= 12) {\n                this.secondRow.push(array.splice(indexToRemove, 1));\n            } else if (i >= 5 && i <= 8) {\n                this.thirdRow.push(array.splice(indexToRemove, 1));\n            } else {\n                this.fourthRow.push(array.splice(indexToRemove, 1));\n            }\n        }\n    }\n\n\n    render() {\n        return (\n            <React.Fragment>\n                <div className={\"row\"}>{this.firstRow}</div>\n                <div className={\"row\"}>{this.secondRow}</div>\n                <div className={\"row\"}>{this.thirdRow}</div>\n                <div className={\"row\"}>{this.fourthRow}</div>\n            </React.Fragment>\n        )\n    }\n}\n\n\n","import React from \"react\"\nimport \"./App.css\"\nimport memMatchLogo from \"./memory-match.svg\";\n// import Backendless from 'backendless';\n\n\nexport default class GameWonComponent extends React.Component{\n\n    constructor(props){\n        super(props);\n        this.submitScore = this.submitScore.bind(this);\n    }\n\n\n    submitScore() {\n        if (document.getElementsByClassName(\"user-name\")[0].value.length > 4\n            &&\n            document.getElementsByClassName(\"user-name\")[0].value.length <= 40) {\n                let scoreObject = {\n                    attemptedMatches: this.props.tileClicks / 2,\n                    name: document.getElementsByClassName(\"user-name\")[0].value,\n                    time: this.props.displayTime,\n                    compositeScore: this.props.displayTime + (this.props.tileClicks / 2)\n                };\n               fetch('/high-scores', {\n                      method: 'POST',\n                      headers: {\n                        'Accept': 'application/json',\n                        'Content-Type': 'application/json',\n                      },\n                      body: JSON.stringify(scoreObject)\n                      }\n               )\n                   .then(res => res.json())\n                   .then( (res) => {\n                       this.props.viewHighScores();\n\n                   })\n        } else {\n            alert(\"Moniker must be between 5 and 40 characters!!\")\n        }\n    }\n\n\n    render(){\n        return(\n            <div className={\"game-won\"}>\n                <div className={\"game-win-text\"}>You've Beaten</div>\n                <div className={\"game-end-logo\"}>\n                <img src={memMatchLogo} alt={\"MemoryMatch!\"} className={\"logo\"}></img>\n                </div>\n                <br></br>\n                <div className={\"attemots\"}><b>Matches Attempted: {this.props.tileClicks / 2}</b></div>\n                <div className={\"attempts\"}><b>Game Duration : {this.props.displayTime} Seconds</b></div>\n                <div>\n                <div className={\"name-input-field-label\"}>Choose a Name!</div>\n                <input className={\"user-name\"}></input>\n                </div>\n                <br></br>\n\n                <br></br>\n                <button className={\"reset-game-button\"} onClick={this.submitScore}>Submit Score</button>\n                <button className={\"reset-game-button\"} onClick={this.props.resetGame}>Play Again</button>\n\n            </div>\n        )\n    }\n}","import React from \"react\";\nimport \"./App.css\";\nimport GameWonComponent from \"./game-won-component\";\n\nexport default class TimerComponent extends React.Component {\n    startTime = \"\";\n    compareTime = \"\";\n    displayTime = '';\n\n    componentDidUpdate() {\n        if (this.startTime === \"\") {\n            let fullDate = new Date();\n            this.startTime = fullDate.getTime();\n        } else {\n            let secondFullDate = new Date();\n            this.compareTime = secondFullDate.getTime();\n            this.displayTime = (this.compareTime - this.startTime) / 1000;\n        }\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <div className={\"timer-display\"}> Time Elapsed = {this.displayTime} seconds</div>\n                {this.props.matches === 8 ?\n                    <GameWonComponent tileClicks={this.props.tileClicks}\n                                      displayTime={this.displayTime}\n                                      resetGame={this.props.resetGame}\n                                      viewHighScores={this.props.viewHighScores}></GameWonComponent>\n                    :\n                    <span></span>\n                }\n            </React.Fragment>\n\n\n        )\n    }\n}\n\n\n\n\n\n","import React from 'react';\nimport './App.css';\nimport GameTilesComponent from './game-tiles-component';\nimport TimerComponent from \"./timer-component\";\nimport memMatchLogo from \"./memory-match.svg\";\n\nexport default class GameScreenComponent extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            firstTileColor: \"\",\n            secondTileColor: \"\",\n            matches: 0,\n            resetTiles: false,\n            tileClicks: 0,\n        };\n        this.handleTileClick = this.handleTileClick.bind(this);\n        this.compareTileColors = this.compareTileColors.bind(this);\n        this.turnOffReset = this.turnOffReset.bind(this);\n    }\n\n\n\n    handleTileClick(e) {\n        //checking to see if classname has been modded, all default classname for gametiles are of length ~10,\n        //do not want to run the event handler if a tile has already been clicked and clicked again\n        if (e.target.className.length < 12) {\n            let tileColor = e.target.id;\n            e.target.className = e.target.className + \" \" + tileColor;\n            console.log(\"handling click\");\n            if (this.state.firstTileColor === \"\") {\n                this.setState({\n                    firstTileColor: tileColor,\n                    tileClicks: this.state.tileClicks + 1\n                })\n            } else {\n                this.setState({\n                    secondTileColor: tileColor,\n                    tileClicks: this.state.tileClicks + 1\n\n                });\n                setTimeout(() => this.compareTileColors(), 300);\n            }\n        }\n    }\n\n\n     compareTileColors() {\n        console.log(\"comparing colors\");\n        if (this.state.firstTileColor === this.state.secondTileColor) {\n            this.setState({\n                firstTileColor: \"\",\n                secondTileColor: \"\",\n                matches: (this.state.matches + 1)\n            })\n        } else {\n            this.setState({\n                firstTileColor: \"\",\n                secondTileColor: \"\",\n                matches: 0,\n                resetTiles: true\n            });\n        }\n    }\n\n    turnOffReset(){\n        this.setState({\n            resetTiles: false\n        })\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                        <div className={\"title\"}>\n                            <img src={memMatchLogo} alt={\"MemoryMatch!\"} className={\"logo\"}></img>\n                        </div>\n                        <div className={\"rules\"}><b>Match the tiles, remember the matches.</b></div>\n                        <br></br>\n                         <div className={\"stat-display-box\"}>\n                             <div className={\"attempts-display\"}>Matches Attempted\n                                : {Math.floor(this.state.tileClicks / 2)}</div>\n                            <TimerComponent matches={this.state.matches}\n                                            tileClicks={this.state.tileClicks}\n                                            resetGame={this.props.resetGame}\n                                            viewHighScores={this.props.viewHighScores}></TimerComponent>\n                        </div>\n                        <br></br>\n\n                        <GameTilesComponent handleTileClick={this.handleTileClick}\n                                            resetTiles={this.state.resetTiles}\n                                            turnOffReset={this.turnOffReset}>\n                        </GameTilesComponent>\n            </React.Fragment>\n        )\n    }\n}","import React from 'react';\nimport HighScoresTitle from \"./highscores-title.svg\";\n\nexport default class HighScoresComponent extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            backendData: '',\n            displayableScores: []\n        };\n        this.callBackend = this.callBackend.bind(this);\n        this.callBackend();\n    }\n\n    callBackend(){\n        console.log(\"calling backend\");\n        fetch('/high-scores')\n            .then(res => res.json())\n            .then( (res) => {\n                this.setState({\n                    backendData: res\n                })\n            })\n            .then( () => {\n                this.sortData();\n            })\n            .catch( (error) =>{\n                console.log(error);\n            })\n    }\n\n    sortData() {\n        console.log(\"sorting response data\");\n        let sortedData = this.state.backendData.sort( (a, b) => {\n            if (a.compositeScore > b.compositeScore){\n                return 1\n            } else {\n                return -1\n            }\n        });\n        this.makeSortedDataDisplayable(sortedData);\n    }\n\n    makeSortedDataDisplayable(sortedData){\n        console.log(\"parsing sorted data for display\");\n        let displayableScoresArray = [];\n        let i = 0;\n        while (i <= (sortedData.length - 1) && i <= 50) {\n            let displayableScore =\n               <tr className={\"score-rows\"}>\n                    <td key={sortedData[i].id}>{i + 1}</td>\n                    <td key={sortedData[i].id} ><b>{sortedData[i].name}</b></td>\n                    <td key={sortedData[i].id}><b>{sortedData[i].compositeScore}</b></td>\n               </tr>;\n            i++;\n            displayableScoresArray.push(displayableScore);\n        }\n       this.setState({\n           displayableScores: displayableScoresArray\n       })\n    }\n\n\n\n\n    render() {\n        return (\n            <React.Fragment>\n\n                <div className={\"high-scores\"}>\n                <img src={HighScoresTitle} alt={\"HIGH SCORES!!!\"} className={\"high-scores-title\"}/>\n                <br></br>\n                <br></br>\n                <table className={\"table-container\"} >\n                <tbody >\n                <tr className={\"high-score-table-headers\"}>\n                <th className={\"high-score-table-headers-small\"}></th>\n                <th className={\"high-score-table-headers-small\"}></th>\n                <th className={\"high-score-table-headers-small\"}><i>Time + Attempted Matches</i></th>\n                </tr>\n                {this.state.displayableScores}\n\n                </tbody>\n                </table>\n                <button className={\"reset-game-button\"} onClick={this.props.closeHighScores}>close scores</button>\n                </div>\n\n            </React.Fragment>\n\n        )\n    }\n}\n\n\n","import React from \"react\";\nimport \"./App.css\"\nimport GameScreenComponent from \"./game-screen-component\";\nimport memMatchLogo from \"./memory-match.svg\"\nimport HighScoresComponent from \"./high-scores-component\";\n\nexport default class StartScreenComponent extends React.Component{\n    constructor(props){\n        super(props);\n            this.state = {\n                startGame: false,\n                viewScores: false,\n            }\n            ;\n            this.startGame = this.startGame.bind(this);\n            this.resetGame = this.resetGame.bind(this);\n            this.viewHighScores = this.viewHighScores.bind(this);\n            this.closeHighScores = this.closeHighScores.bind(this);\n        }\n\n\n    startGame(){\n        this.setState({\n            startGame: true,\n            viewScores: false\n        })\n    }\n\n    resetGame(){\n        this.setState({\n            startGame: false\n        })\n    }\n\n    viewHighScores(){\n        this.setState({\n            viewScores: true,\n            startGame: false,\n            }\n        );\n    }\n\n    closeHighScores(){\n        this.setState({\n            viewScores: false\n        })\n    }\n\n\n    whichView(){\n        if (this.state.startGame) {\n            return <GameScreenComponent resetGame={this.resetGame}\n                                        viewHighScores={this.viewHighScores}/>\n        } else if (this.state.viewScores){\n            return <HighScoresComponent closeHighScores={this.closeHighScores}\n                                        newScore={this.state.newScore}/>\n        } else {\n            return(\n                <div className={\"start-screen\"}>\n                        <img src={memMatchLogo} alt={\"MemoryMatch!\"} className={\"logo\"}></img>\n                        <br/>\n                        <button className={\"reset-game-button\"} onClick={this.startGame}>Start Game</button>\n                        <button className={\"reset-game-button\"} onClick={this.viewHighScores}>High Scores</button>\n                </div>\n            )\n        }\n    }\n\n    render(){\n        return(\n            <React.Fragment>\n\n                    {/*/!*<GameScreenComponent resetGame={this.resetGame}></GameScreenComponent>*!/*/}\n                    {/*/!*:*!/*/}\n\n                    {/*<div className={\"start-screen\"}>*/}\n                        {/*<img src={memMatchLogo} alt={\"MemoryMatch!\"} className={\"logo\"}></img>*/}\n                        {/*<br/>*/}\n                        {/*<button className={\"start-button\"} onClick={this.startGame}>Start A New Game!</button>*/}\n                         {/*<button className={\"start-button\"} onClick={this.viweScores}>View High Scores!</button>*/}\n                    {/*</div>*/}\n                <span>{this.whichView()}</span>\n\n            </React.Fragment>\n        )\n    }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport StartScreenComponent from \"./start-screen-component\";\n\n\nconsole.log(\"memorymatch starting\");\n\n\n\n\nReactDOM.render(<StartScreenComponent />, document.getElementById('root'));"],"sourceRoot":""}